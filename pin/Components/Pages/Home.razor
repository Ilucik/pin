@page "/"
@using Microsoft.Extensions.Configuration
@using pin.Infrastructure;
@using pin.Infrastructure.Models.Settings
@inject IConfiguration config
@inject IWritableOptions<Settings> writableConfig
@inject NavigationManager Navigation
@if (directorySettings is null || directorySettings.HomeDirectory is null)
{
    <div class="home-container">
        <div class="home-button">
            <SelectHomeDirectory OnClickCallback="Load"  />
        </div>
    </div>
}

@code {
    private DirectorySetting directorySettings;

    protected override async Task OnInitializedAsync()
    {
        var settings = config.GetSection(nameof(Settings)).Get<Settings>();
        directorySettings = settings.DirectorySetting;
        if (directorySettings is not null && directorySettings.HomeDirectory is not null)
            Navigation.NavigateTo(nameof(Images));

        await base.OnInitializedAsync();
    }

    private void Load(string path)
    {
        directorySettings.HomeDirectory = path;
        writableConfig.Update(e => { 
            e.DirectorySetting.HomeDirectory = path;
        });
        Thread.Sleep(500);
        Navigation.NavigateTo(nameof(Images));
    }
}
